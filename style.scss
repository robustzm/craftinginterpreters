
/*
NO Lora:400,700,400italic,700italic
NO Noto+Serif:400,700,400italic,700italic
NO Bitter:400,700,400italic
YES PT+Serif:400,700,400italic,700italic
MEH Libre+Baskerville:400,700,400italic
MEH Crimson+Text:400,400italic,600,600italic,700,700italic
Cardo:400,400italic,700
Source+Serif+Pro:400,600,700

Source Sans Pro
BenchNine - ok, a bit informal
News Cycle
Cabin Condensed
Asap
Muli
Roboto Condensed - pretty nice
Open Sans Condensed
Raleway
Karla - neat
Quattrocento Sans
Pontano San
Sintony - pairs strangely well

Droid Sans
Lato
Asap
Raleway
Titillium+Web
Karla
Pathway Gothic One

was: Roboto

*/

//$serif: "Merriweather", Georgia, serif;
$serif: "Crimson Text", Georgia, serif;

$mono: "Droid Sans Mono", Menlo, Consolas, Monaco, monospace;
$header: "Sintony", sans-serif;
$nav: "Source Sans Pro", sans-serif;
//$sans: "Source Sans Pro", "Lucida Grande", "Lucida Sans Unicode",
//    Verdana, sans-serif;
//$header: "Source Sans Pro", Georgia, serif;

$hue: 205;
$primary: hsl($hue, 80%, 45%);
$hairline: #eee;

$col: 48px;

body, h1, h2, h3, h4, p, blockquote, code, ul, ol, dl, dd, img {
  margin: 0;
}

// Make sure we don't split on the thin spaces around an em dash.
.emdash {
  white-space: nowrap;
}

body {
  color: #222;
  font: normal 19px/24px $serif;
}

.scrim {
  position: absolute;
  width: 100%;
  height: 10000px;

  z-index: 4;

  //background: url('columns.png');
  background: url('rows.png');
}

nav {
  position: fixed;
  width: $col * 7;
  height: 100%;

  background: hsl($hue, 20%, 20%);
  color: hsl($hue, 20%, 40%);
  font: 300 14px/24px $nav;

  .contents {
    position: absolute;
    top: 175px;
    bottom: 0;
    right: $col;
    left: $col;
    overflow-y: scroll;
  }

  h1 {
    padding: 125px 0 0 0;
    font: 300 21px/24px $nav;
    text-transform: uppercase;
    text-align: center;
    letter-spacing: 1px;
  }

  h2 {
    margin: 0 0 13px 0;
    padding: 28px 0 0 0;
    font: 400 13px/18px $nav;
    text-transform: uppercase;
    text-align: center;
    letter-spacing: 1px;
    border-bottom: solid 1px hsl($hue, 20%, 30%);
  }

  ol, ul {
    padding-left: 24px;
  }

  ul {
    list-style-type: disc;
  }

  a, h2 a {
    color: hsl($hue, 20%, 60%);
  }

  a:hover {
    color: hsl($hue, 20%, 90%);
    border-bottom: solid 1px hsl($hue, 20%, 40%);
  }

  ol > li > a {
    font-weight: 400;
  }

  .right {
    float: right;
  }
}

.page {
  position: relative;

  width: $col * 19;
  margin: 0 auto 0 $col * 8;
}

article {
  width: $col * 12;

  h1 {
    font: 300 48px/48px $serif;
    padding: 103px 0 23px 0;
  }

  h2 {
    font: normal 32px/24px $serif;
    margin: 67px 0 0 0;
    padding-bottom: 5px;
  }

  h3 {
    font: italic 26px/24px $serif;
    margin: 70px 0 0 0;
    padding-bottom: 2px;
  }

  h2 a, h3 a {
    color: #222;
    border-bottom: none;
  }

  h2 a:hover, h3 a:hover {
    border-bottom: none;
    color: inherit;
  }

  h2 a::after, h3 a::after {
    content: "#";
    color: #fff;
    transition: color 0.2s ease;
    padding-left: 8px;
  }

  h2 a:hover::after, h3 a:hover::after {
    color: #ddd;
  }

  p {
    margin: 24px 0;
  }

  ol, ul {
    padding: 0 0 0 24px;
  }
}

a {
  color: $primary;
  text-decoration: none;
  outline: none;

  border-bottom: solid 1px hsla($hue, 80%, 90%, 0);

  transition: color 0.2s ease,
              border-color 0.4s ease;
}

a:hover {
  color: $primary;
  border-bottom: solid 1px hsla($hue, 80%, 80%, 100%);
}

img {
  max-width: 100%;

  border: solid 1px hsl(40, 30%, 95%);
  border-radius: 3px;
}

code {
  color: #555;
  background: hsl(45, 30%, 97%);
  font: normal 15px $mono;
  white-space: nowrap;
  padding: 2px 2px;
}

a code {
  color: $primary;
}

pre {
  color: #444;
  font: normal 13px/20px $mono;

  background: hsl(45, 30%, 97%);
  padding: 12px;
  margin: -12px;

  // Scroll horizontally if not wide enough.
  overflow: auto;

  border-radius: 3px;
}

aside {
  position: absolute;
  right: 0;

  width: $col * 6;

  font: normal 16px/20px $serif;

  border-top: solid 1px hsl($hue, 20%, 90%);

  p {
    margin: 20px 0;
  }

  p:first-child {
    margin-top: 4px;
  }
}

// Syntax highlighting.
.codehilite .k  { color: $primary; } // keyword
.codehilite .kd { color: $primary; } // keyword declaration
.codehilite .kt { color: #0aa; }     // keyword type
.codehilite .s  { color: #c70; }     // string
.codehilite .sc { color: #c70; }     // string
.codehilite .s2 { color: #c70; }     // string
.codehilite .c  { color: #999; }     // comment
.codehilite .c1 { color: #999; }     // comment
.codehilite .cm { color: #999; }     // comment
.codehilite .cp { color: #594; }     // preprocessor
.codehilite .nl { color: $primary; } // keyword label (private: etc.)
.codehilite .nt { color: $primary; } // json key

// Hack: Pygments isn't recognizing preprocessor directives, so just color the
// error like a keyword.
.codehilite .err { color: $primary; }
