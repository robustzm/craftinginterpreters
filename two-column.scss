
/*
NO Lora:400,700,400italic,700italic
NO Noto+Serif:400,700,400italic,700italic
NO Bitter:400,700,400italic
YES PT+Serif:400,700,400italic,700italic
MEH Libre+Baskerville:400,700,400italic
MEH Crimson+Text:400,400italic,600,600italic,700,700italic
Cardo:400,400italic,700
Source+Serif+Pro:400,600,700

NO Cutive+Mono
Fira+Mono:400,700
Oxygen+Mono
YES PT+Mono
YES Cousine:400,700,400italic,700italic
Inconsolata:400,700

Noto Sans
Lato
Cabin
PT Sans
PT Sans Narrow
Arimo
Oxygen
Signika
Archivo Narrow
*/

//$serif: "Merriweather", Georgia, serif;
$serif: "PT Serif", Georgia, serif;

$mono: "Droid Sans Mono", Menlo, Consolas, Monaco, monospace;
$header: "Oxygen", sans-serif;
//$sans: "Source Sans Pro", "Lucida Grande", "Lucida Sans Unicode",
//    Verdana, sans-serif;
//$header: "Source Sans Pro", Georgia, serif;

$primary: hsl(330, 60%, 55%);
$hairline: #eee;

$hgrid: 64px;

body, h1, h2, h3, h4, p, blockquote, code, ul, ol, dl, dd, img {
  margin: 0;
}

body {
  color: #222;
  font: normal 16px/24px $serif;

  //background: hsl(30, 40%, 97%);
}

.page {
  // Asides and code blocks are relative to this.
  position: relative;

  width: 1060px;
  margin: 0 auto;

  background: #888;
}

.content {
  width: 500px;
  padding-right: 30px;

  background: white;
}

aside, pre {
  position: absolute;
  right: 0;
  width: 500px;
  padding: 15px;

  background: #eee;
  font: normal 14px/20px $serif;
}

h1 {
}

h2 {
}

h3 {
}

h3 a {
}

p {
}

a {
}

img {
}

code {
  font: normal 15px $mono;
  white-space: nowrap;
}

pre {
  font: normal 13px/20px $mono;
  background: #333;
  color: #bbb;

  // Scroll horizontally if not wide enough.
  overflow: auto;
}

// Syntax highlighting.
.codehilite .k  { color: $primary; } // keyword
.codehilite .kd { color: $primary; } // keyword declaration
.codehilite .kt { color: #09a; }     // keyword type
.codehilite .s  { color: #c70; }     // string
.codehilite .sc { color: #c70; }     // string
.codehilite .s2 { color: #c70; }     // string
.codehilite .c  { color: #999; }     // comment
.codehilite .c1 { color: #999; }     // comment
.codehilite .cm { color: #999; }     // comment
.codehilite .cp { color: #594; }     // preprocessor
.codehilite .nl { color: $primary; } // keyword label (private: etc.)
.codehilite .nt { color: $primary; } // json key

// Hack: Pygments isn't recognizing preprocessor directives, so just color the
// error like a keyword.
.codehilite .err { color: $primary; }
